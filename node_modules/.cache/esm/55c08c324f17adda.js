let ApolloServer,express,typeDefs,resolvers;_4f1‍.w("apollo-server-express",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}]]);_4f1‍.w("express",[["default",["express"],function(v){express=v}]]);_4f1‍.w("./typeDefs",[["default",["typeDefs"],function(v){typeDefs=v}]]);_4f1‍.w("./resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);




const app = express()

const { APP_PORT = 4000, NODE_ENV = 'development' } = process.env

const IN_PROD = NODE_ENV === 'production'

app.disable('x-powered-by')

const server = new ApolloServer({
  typeDefs,
  resolvers,
  playground: !IN_PROD
})

server.applyMiddleware({ app })

app.listen({ port: APP_PORT }, () =>
  console.log(`http://localhost:${APP_PORT}${server.graphqlPath}`)
)
